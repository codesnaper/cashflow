# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Release

on:
  workflow_dispatch:
    inputs:
        serverHostName:
          type: string
          description: Server Ip address

jobs:
  CI-CD_RELEASE:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Configure Staging Server
      run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
      env:
          SSH_USER: ${{ secrets.USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ github.event.inputs.serverHostName }} 
    - name: CodeDeploy
      env:
        ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
      run: |
         ssh staging './server.sh ${{ secrets.ACCESS_KEY }} ${{ secrets.CLIENT_ID }} ${{ secrets.DB_PASSWORD }} ${{ secrets.DB_URL }} ${{ secrets.DB_USER }} ${{ secrets.IDENTITY_POOL_ID }} ${{ secrets.REGION }} ${{ secrets.SECRET_KEY }} ${{ secrets.USER_POOL_ID }}' 
    - name: Cheking out
      uses: actions/checkout@v3
    - name: Setting Node.js Enviornment
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Installing Dependencies
      run: |
          cd expense-ui
          npm ci
    - name: Building UI Artifacts
      run: |
          cd expense-ui 
          npm run build --if-present
    - name: Copying UI file to App
      run: |
          cp -r expense-ui/build/. expense-api/src/main/resources/static/
    - name: Setting up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build JAR
      run: |
          cd expense-api
          mvn install
    - name: Publish Jar
      uses: zdurham/s3-upload-github-action@master
      env:
        FILE: expense-api/target/expense-management.jar
        AWS_REGION: 'ap-south-1'
        S3_BUCKET: em-jar
        S3_KEY: expense-management.jar
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{secrets.SECRET_KEY}}
    - name: Release
      uses: google-github-actions/release-please-action@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        release-type: java
        package-name: expense-management
        bump-minor-pre-major: true
        bump-patch-for-minor-pre-major: true
        monorepo-tags: true
        changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Miscellaneous","hidden":false}]'
        include-v-in-tag: true
        pull-request-header: New Release for Expense-Management.
    - name: Creating Tags
      if: ${{ steps.release.outputs.release_created }}
      run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}


      
