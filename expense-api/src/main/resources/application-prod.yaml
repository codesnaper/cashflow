server:
  port: 80
aws:
  cognito:
    clientId: ${CLIENT_ID}
    userPoolId: ${USER_POOL_ID}
    identityPoolId: ${IDENTITY_POOL_ID}
    region: ${REGION}
    secretKey: ${SECRET_KEY}
    accessKey: ${ACCESS_KEY}
    authFlow: ADMIN_NO_SRP_AUTH
    userNameField: username
    groupsField:
    connectionTimeout: 2000
    readTimeout: 2000

spring:
  config:
    location: path.yaml
  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver
    hikari:
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
      maximum-pool-size: 90
  jpa:
    generate-ddl: true

logging:
  file: log/em.log
  level:
    com:
      expense: INFO

react:
  router: /em/bank,/em/limit,/em/expense,/em/category,/em/account,/em/notification,/em/profile

expense:
  base: /expense/api
  version: /v1
  bank:
    variable:
      bankId: bank-id
    base: /bank
    post: /
    get: /
    update: /
    delete: /{${expense.bank.variable.bankId}}
  account:
    bank:
      variable:
        accountId: account-id
        accountType: account-type
      base: /bank/{${expense.bank.variable.bankId}}/account
      add: /type={${expense.account.bank.variable.accountType}}
      update: /type={${expense.account.bank.variable.accountType}}
      delete: /{${expense.account.bank.variable.accountId}}
      get: /{${expense.account.bank.variable.accountId}}
      getAll: /type={${expense.account.bank.variable.accountType}}
